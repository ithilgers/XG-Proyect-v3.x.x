version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.optimized
      target: production
      args:
        PHP_VERSION: 8.3
    container_name: xgproyect-app
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=xgp
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./storage:/var/www/html/storage
      - ./public/upload:/var/www/html/public/upload
    depends_on:
      - db
      - redis
    networks:
      - xgproyect

  nginx:
    image: nginx:alpine
    container_name: xgproyect-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - xgproyect

  db:
    image: mysql:8.0
    container_name: xgproyect-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: xgp
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: xgproyect
      MYSQL_PASSWORD: xgproyect
    ports:
      - "33060:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database:/docker-entrypoint-initdb.d:ro
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - xgproyect

  redis:
    image: redis:7-alpine
    container_name: xgproyect-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass xgproyect
    networks:
      - xgproyect

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: xgproyect-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - xgproyect

  mailhog:
    image: mailhog/mailhog
    container_name: xgproyect-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - xgproyect

networks:
  xgproyect:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
